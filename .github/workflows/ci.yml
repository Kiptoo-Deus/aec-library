name: CI
on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [Debug, Release]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build
        sudo apt-get install -y libgtest-dev libbenchmark-dev
        
    - name: Configure CMake
      run: |
        cmake -B build \
              -DCMAKE_BUILD_TYPE=${{matrix.build-type}} \
              -DAEC_BUILD_TESTS=ON \
              -DAEC_BUILD_BENCHMARKS=ON \
              -DAEC_BUILD_EXAMPLES=ON
    
    - name: Build
      run: cmake --build build --parallel
    
    - name: Run tests
      working-directory: build
      run: ctest --output-on-failure
    
    - name: Run benchmarks
      working-directory: build
      run: |
        ./benchmarks/aec_benchmark --benchmark_format=json > benchmark_results.json
        echo "Benchmark results:"
        ./benchmarks/aec_benchmark --benchmark_format=console
    
    - name: Run example
      working-directory: build
      run: ./examples/basic_usage

  quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Clang-tidy check
      run: |
        sudo apt-get install -y clang-tidy
        # Basic syntax check without complex analysis
        find src include -name '*.cpp' -o -name '*.hpp' | head -5 | xargs clang-tidy
